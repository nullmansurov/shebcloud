// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å id="wikipedia"
document.getElementById('wikipedia').addEventListener('click', function() {
    var editor = document.getElementById('editor');

    // –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    var uniqueId = 'wiki-search-container-' + Date.now();

    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    var wikiContainer = document.createElement('div');
    wikiContainer.id = uniqueId;
    wikiContainer.classList.add("wiki-container");
    
    // –î–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º
    wikiContainer.setAttribute('contenteditable', 'false');

    wikiContainer.innerHTML = `
        <input type="text" class="wiki-search" placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å">
        <button class="wiki-search-btn">–ò—Å–∫–∞—Ç—å</button>
        <div class="wiki-result"></div>
    `;

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
    editor.appendChild(wikiContainer);
    wikiContainer.scrollIntoView();
    wikiContainer.querySelector('.wiki-search').focus();

    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏)
    observeWikiContainerRemoval(wikiContainer);
});


// –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–ò—Å–∫–∞—Ç—å" –¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ #editor
document.getElementById('editor').addEventListener('click', function(e) {
    if (e.target.classList.contains('wiki-search-btn')) {
        var wikiContainer = e.target.closest('.wiki-container');
        var queryInput = wikiContainer.querySelector('.wiki-search');
        var query = queryInput.value.trim();
        if (!query) return;

        var resultDiv = wikiContainer.querySelector('.wiki-result');
        resultDiv.innerHTML = 'üîç –ò—â–µ–º...';

        fetch(`https://ru.wikipedia.org/w/api.php?action=query&prop=extracts&titles=${encodeURIComponent(query)}&exintro&explaintext&format=json&origin=*`)
            .then(response => response.json())
            .then(data => {
                let pages = data.query.pages;
                let pageId = Object.keys(pages)[0];

                if (pageId === "-1") {
                    resultDiv.innerHTML = "<p class='error-msg'>‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>";
                    return;
                }

                let page = pages[pageId];
                let extract = page.extract || "–°–∏–Ω–æ–ø—Å–∏—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.";

                resultDiv.innerHTML = `
                    <p class="wiki-title"><strong>${page.title}</strong></p>
                    <p class="wiki-text">${extract.length > 500 ? extract.substring(0, 500) + "..." : extract}</p>
                    <a class="wiki-link" href="https://ru.wikipedia.org/wiki/${encodeURIComponent(page.title)}" target="_blank">–ü–µ—Ä–µ–π—Ç–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏—é</a>
                `;
            })
            .catch(error => {
                resultDiv.innerHTML = "<p class='error-msg'>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
                console.error(error);
            });
    }
});


// (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
document.getElementById('editor').addEventListener('keydown', function(e) {
    if (e.target.classList.contains('wiki-search') && e.key === 'Enter') {
        e.preventDefault();
        var wikiContainer = e.target.closest('.wiki-container');
        var query = e.target.value.trim();
        if (!query) return;

        var resultDiv = wikiContainer.querySelector('.wiki-result');
        resultDiv.innerHTML = 'üîç –ò—â–µ–º...';

        fetch(`https://ru.wikipedia.org/w/api.php?action=query&prop=extracts&titles=${encodeURIComponent(query)}&exintro&explaintext&format=json&origin=*`)
            .then(response => response.json())
            .then(data => {
                let pages = data.query.pages;
                let pageId = Object.keys(pages)[0];

                if (pageId === "-1") {
                    resultDiv.innerHTML = "<p class='error-msg'>‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>";
                    return;
                }

                let page = pages[pageId];
                let extract = page.extract || "–°–∏–Ω–æ–ø—Å–∏—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.";

                resultDiv.innerHTML = `
                    <p class="wiki-title"><strong>${page.title}</strong></p>
                    <p class="wiki-text">${extract.length > 500 ? extract.substring(0, 500) + "..." : extract}</p>
                    <a class="wiki-link" href="https://ru.wikipedia.org/wiki/${encodeURIComponent(page.title)}" target="_blank">–ü–µ—Ä–µ–π—Ç–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏—é</a>
                `;
            })
            .catch(error => {
                resultDiv.innerHTML = "<p class='error-msg'>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
                console.error(error);
            });
    }
});


// –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ.
// –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (—Å–ª—É–∂–µ–±–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç) –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω, —É–¥–∞–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
function observeWikiContainerRemoval(container) {
    var target = container.querySelector('.wiki-search-btn');
    var observer = new MutationObserver(function(mutations) {
        if (target.textContent.trim() === '') {
            container.remove();
            observer.disconnect();
        }
    });
    observer.observe(target, { childList: true, subtree: true, characterData: true });
}
